{"version":3,"sources":["components/Theme.tsx","components/Circle.js","components/Main/style.tsx","components/Main/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Theme","styled","div","Canvas","React","useEffect","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","canvas","document","getElementById","ctx","getContext","style","width","innerWidth","height","innerHeight","settings","abstract","emission_rate","min_life","life_range","min_angle","angle_range","min_speed","speed_range","min_size","size_range","start_colours","end_colours","gravity","x","y","min_position","position_range","blood","fire","rain","Particle","angle","speed","life","size","start_colour","colour_step","this","pos","lived","radians","Math","PI","vel","cos","sin","colour","Emitter","emission_delay","last_update","last_emission","particles","position_vary","prototype","update","time","Date","now","dt","i","floor","length","random","end_colour","push","slice","index","particle","dead","splice","fillStyle","round","beginPath","arc","fill","emitter","loop","clearRect","id","backgroud","MainStyle","useState","isOpen","setIsOpen","btnClass","classNames","videoClass","className","onClick","autoPlay","src","AppContainer","BackGround","MainContaier","App","Circle","Main","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59274711.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Theme = styled.div`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\n      'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n`;\n\n\nexport default Theme;","import React from 'react';\n\nexport const Canvas = () => {\n  React.useEffect(() => {\n    window.requestAnimFrame =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n    canvas.style = 'background: #000';\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    var settings = {\n      abstract: {\n        emission_rate: 100,\n        min_life: 3,\n        life_range: 0.3,\n        min_angle: 0,\n        angle_range: 360,\n        min_speed: 1,\n        speed_range: 5,\n        min_size: 4,\n        size_range: 4,\n        start_colours: [[112, 58, 14, 0.8], [67, 27, 4, 0.8], [169, 120, 58, 0.8]],\n        end_colours: [[112, 58, 14, 0], [67, 27, 4, 0], [169, 120, 58, 0]],\n        gravity: {\n          x: 20,\n          y: 100\n        },\n        min_position: {\n          x: 0,\n          y: 0\n        },\n        position_range: {\n          x: canvas.width - 200,\n          y: 0\n        }\n      },\n\n      blood: {\n        emission_rate: 1000,\n        min_life: 1,\n        life_range: 1,\n        min_angle: 85,\n        angle_range: 10,\n        min_speed: 10,\n        speed_range: 100,\n        min_size: 2,\n        size_range: 2,\n        start_colours: [[253, 69, 69, 0.8], [201, 10, 10, 0.8], [168, 57, 57, 0.8]],\n        end_colours: [[253, 69, 69, 0.1], [201, 10, 10, 0.1], [168, 57, 57, 0.1]],\n        gravity: {\n          x: 0,\n          y: 100\n        }\n      },\n\n      fire: {\n        emission_rate: 1000,\n        min_life: 1,\n        life_range: 0.5,\n        min_angle: 80,\n        angle_range: 20,\n        min_speed: 10,\n        speed_range: 140,\n        min_size: 2,\n        size_range: 10,\n        start_colours: [[239, 127, 67, 0.7], [253, 69, 69, 0.8], [239, 100, 67, 0.7]],\n        end_colours: [[90, 90, 90, 0], [110, 110, 110, 0], [130, 130, 130, 0]],\n        gravity: {\n          x: 0,\n          y: -100\n        },\n        min_position: {\n          x: -20,\n          y: -20\n        },\n        position_range: {\n          x: 40,\n          y: 40\n        }\n      },\n\n      rain: {\n        emission_rate: 50,\n        min_life: 2,\n        life_range: 0.3,\n        min_angle: 260,\n        angle_range: 20,\n        min_speed: 30,\n        speed_range: 30,\n        min_size: 1,\n        size_range: 2,\n        start_colours: [[130, 196, 245, 0.8], [69, 152, 212, 0.8]],\n        end_colours: [[130, 196, 245, 0.3], [69, 152, 212, 0.3]],\n        gravity: {\n          x: 20,\n          y: 100\n        },\n        min_position: {\n          x: 0,\n          y: 0\n        },\n        position_range: {\n          x: canvas.width - 200,\n          y: 0\n        }\n      }\n    };\n\n    var Particle = function(x, y, angle, speed, life, size, start_colour, colour_step) {\n      /* the particle's position */\n\n      this.pos = {\n        x: x || 0,\n        y: y || 0\n      };\n\n      /* set specified or default values */\n\n      this.speed = speed || 5;\n\n      this.life = life || 1;\n\n      this.size = size || 2;\n\n      this.lived = 0;\n\n      /* the particle's velocity */\n\n      var radians = (angle * Math.PI) / 180;\n\n      this.vel = {\n        x: Math.cos(radians) * speed,\n        y: -Math.sin(radians) * speed\n      };\n\n      /* the particle's colour values */\n\n      this.colour = start_colour;\n      this.colour_step = colour_step;\n    };\n\n    var Emitter = function(x, y, settings) {\n      /* the emitter's position */\n\n      this.pos = {\n        x: x,\n        y: y\n      };\n\n      /* set specified values */\n\n      this.settings = settings;\n\n      /* How often the emitter needs to create a particle in milliseconds */\n\n      this.emission_delay = 1000 / settings.emission_rate;\n\n      /* we'll get to these later */\n\n      this.last_update = 0;\n\n      this.last_emission = 0;\n\n      /* the emitter's particle objects */\n\n      this.particles = [];\n\n      /* particle position settings */\n\n      this.position_vary = this.settings.position_range || false;\n\n      this.min_position = this.settings.min_position || { x: 0, y: 0 };\n    };\n\n    Emitter.prototype.update = function() {\n      /* set the last_update variable to now if it's the first update */\n\n      if (!this.last_update) {\n        this.last_update = Date.now();\n\n        return;\n      }\n\n      /* get the current time */\n\n      var time = Date.now();\n\n      /* work out the milliseconds since the last update */\n\n      var dt = time - this.last_update;\n\n      /* add them to the milliseconds since the last particle emission */\n\n      this.last_emission += dt;\n\n      /* set last_update to now */\n\n      this.last_update = time;\n\n      /* check if we need to emit a new particle */\n\n      if (this.last_emission > this.emission_delay) {\n        /* find out how many particles we need to emit */\n\n        var i = Math.floor(this.last_emission / this.emission_delay);\n\n        /* subtract the appropriate amount of milliseconds from last_emission */\n\n        this.last_emission -= i * this.emission_delay;\n\n        while (i--) {\n          /* calculate the particle's properties based on the emitter's settings */\n\n          var start_colour = this.settings.start_colours[\n            Math.floor(this.settings.start_colours.length * Math.random())\n          ];\n\n          var end_colour = this.settings.end_colours[\n            Math.floor(this.settings.end_colours.length * Math.random())\n          ];\n\n          var life = this.settings.min_life + Math.random() * this.settings.life_range;\n\n          var colour_step = [\n            (end_colour[0] - start_colour[0]) / life /* red */,\n            (end_colour[1] - start_colour[1]) / life /* green */,\n            (end_colour[2] - start_colour[2]) / life /* blue */,\n            (end_colour[3] - start_colour[3]) / life /* alpha */\n          ];\n\n          this.particles.push(\n            new Particle(\n              this.min_position.x + (this.position_vary ? Math.random() * this.position_vary.x : 0),\n              this.min_position.y + (this.position_vary ? Math.random() * this.position_vary.y : 0),\n              this.settings.min_angle + Math.random() * this.settings.angle_range,\n              this.settings.min_speed + Math.random() * this.settings.speed_range,\n              life,\n              this.settings.min_size + Math.random() * this.settings.size_range,\n              start_colour.slice(),\n              colour_step\n            )\n          );\n        }\n      }\n\n      /* convert dt to seconds */\n\n      dt /= 1000;\n\n      /* loop through the existing particles */\n\n      var index = this.particles.length;\n\n      while (index--) {\n        var particle = this.particles[index];\n\n        /* skip if the particle is dead */\n\n        if (particle.dead) {\n          /* remove the particle from the array */\n\n          this.particles.splice(index, 1);\n\n          continue;\n        }\n\n        /* add the seconds passed to the particle's life */\n\n        particle.lived += dt;\n\n        /* check if the particle should be dead */\n\n        if (particle.lived >= particle.life) {\n          particle.dead = true;\n\n          continue;\n        }\n\n        /* calculate the particle's new position based on the forces multiplied by seconds passed */\n\n        particle.vel.x += this.settings.gravity.x * dt;\n        particle.vel.y += this.settings.gravity.y * dt;\n\n        particle.pos.x += particle.vel.x * dt;\n        particle.pos.y += particle.vel.y * dt;\n\n        /* calculate new colour and draw the particle */\n\n        particle.colour[0] += particle.colour_step[0] * dt;\n        particle.colour[1] += particle.colour_step[1] * dt;\n        particle.colour[2] += particle.colour_step[2] * dt;\n        particle.colour[3] += particle.colour_step[3] * dt;\n\n        ctx.fillStyle =\n          'rgba(' +\n          Math.round(particle.colour[0]) +\n          ',' +\n          Math.round(particle.colour[1]) +\n          ',' +\n          Math.round(particle.colour[2]) +\n          ',' +\n          particle.colour[3] +\n          ')';\n\n        var x = this.pos.x + particle.pos.x;\n        var y = this.pos.y + particle.pos.y;\n\n        ctx.beginPath();\n        ctx.arc(x, y, particle.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    };\n\n    var emitter = new Emitter(100, 60, settings.abstract);\n\n    function loop() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      emitter.update();\n\n      window.requestAnimFrame(loop);\n    }\n\n    loop();\n  }, []);\n\n  return (\n    <>\n      <canvas id=\"canvas\" style={{ backgroud: '#000' }}></canvas>\n    </>\n  );\n};\n\nexport default Canvas;\n","import styled from 'styled-components';\n\nexport const MainStyle = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  .ymj-enter-btn {\n    font-size: 48px;\n    font-family: 'Josefin Sans', sans-serif;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%;\n    border: 1px solid #aaa;\n    line-height: 120px;\n    text-align: center;\n    cursor: pointer;\n    transition: all 0.8s;\n    color: #aaa;\n    &:hover {\n      border-color: #fff;\n      color: #fff;\n    }\n    position: absolute;\n    z-index: 3;\n  }\n  .ymj-enter-btn-open {\n    opacity: 0;\n  }\n  video {\n    width: 0;\n    height: 0;\n    transition: all 1s;\n    transition-delay: 1s;\n    border-radius: 50% 50%;\n    position: relative;\n    z-index: 2;\n    &.ymj-enter-video-open {\n      width: 80%;\n      height: 60%;\n      border-radius: 0;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { MainStyle } from './style';\n\nexport default () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  function handleClick() {\n    setIsOpen(true);\n  }\n  const btnClass = classNames('ymj-enter-btn', {\n    'ymj-enter-btn-open': isOpen\n  });\n  const videoClass = classNames({\n    'ymj-enter-video-open': isOpen\n  });\n  return (\n    <MainStyle>\n      <div className={btnClass} onClick={handleClick}>\n        <span className=\"ymj-enter-btn-text\">YMJ</span>\n      </div>\n      <video className={videoClass} autoPlay loop src='http://110.185.117.29/vcloud1049.tc.qq.com/1049_M0101095004dZuYf4GjlMy1001577684.f40.mp4?vkey=9BDB5393AB27CB517699A1A370285FD3E65F0ED3D44FD24C326A67A810AC7A5C66CAD4AE1ADEE4A462EDC46F01220A8A1245EB0EA6AA46399285606CD17B14FA669F5BD510FA7EA816E0D4558FD93743874D2AEDDDA85D80'/>\n    </MainStyle>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Circle from '@components/Circle';\nimport Main from '@components/Main';\n\nconst AppContainer = styled.div`\n  position: relative;\n`;\n\nconst BackGround = styled.div`\n  position: absolute;\n  z-index: 1;\n`;\n\nconst MainContaier = styled.div`\n  position: absolute;\n  z-index: 2;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <AppContainer className=\"App\">\n      <BackGround>\n        <Circle />\n      </BackGround>\n      <MainContaier>\n        <Main />\n      </MainContaier>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Theme from '@components/Theme';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}